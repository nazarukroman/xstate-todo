{"version":3,"sources":["data.js","state/todoMachine.js","components/Body.jsx","logo.svg","components/App.jsx","index.jsx"],"names":["todosList","id","title","todoMachine","Machine","initial","context","list","selected","error","states","loading","invoke","src","event","Promise","resolve","reject","setTimeout","undefined","str","filter","item","includes","onDone","target","actions","assign","data","onError","success","on","COMPLETE_TODO","ADD_TODO","nanoid","REMOVE_TODO","FILTER_TODOS","send","type","RESET_FILTERS","failure","RETRY","Body","useState","filterValue","setFilterValue","addValue","setAddValue","useMachine","devTools","todos","useEffect","className","value","matches","role","htmlFor","placeholder","onChange","onClick","length","style","color","map","isChecked","classNames","checked","display","margin","App","logo","alt","inspect","iframe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a7ba869.chunk.js","sourcesContent":["export const todosList = [\n  {\n    id: '5Ejw7Wc5uA8bG29hF6_FI',\n    title: 'Todo goal – 1',\n  },\n  {\n    id: 'ip2oRmJEdBSfX_6nmUFhR',\n    title: 'Todo goal – 2',\n  },\n  {\n    id: 'hdA5Pjw9lAGpBD0GS5xqC',\n    title: 'Todo goal – 3',\n  },\n  {\n    id: 'pfyQLxQ8y7CtF7VH1orLu',\n    title: 'Todo goal – 4',\n  },\n  {\n    id: 'Z3dLwFEH2b4bKP9XK4F3j',\n    title: 'Todo goal – 5',\n  },\n  // {\n  //   id: 'R1ReTigIhDMkIOGzpkrq_',\n  //   title: 'Todo goal – 6',\n  // },\n  // {\n  //   id: 'o5z1rkQTsVTW4X8nfJMSH',\n  //   title: 'Todo goal – 7',\n  // },\n  // {\n  //   id: 'l3dcaYA6Qrf4LLQcRF0JA',\n  //   title: 'Todo goal – 8',\n  // },\n  // {\n  //   id: 'P0hsW-4b6BVd3aNRi7TiA',\n  //   title: 'Todo goal – 9',\n  // },\n  // {\n  //   id: '7-Jf0rboLWNaF-m3D2Xx_',\n  //   title: 'Todo goal – 10',\n  // },\n];\n","import { Machine, assign, send } from 'xstate';\nimport { nanoid } from 'nanoid';\nimport { todosList } from '../data';\n\nconst fetchTodos = (context, event) =>\n  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      // reject('Something went wrong...');\n      if (event.str !== undefined && event.str !== '') {\n        resolve(todosList.filter((item) => item.title.includes(event.str)));\n      }\n      resolve(todosList);\n    }, 500);\n  });\n\nexport const todoMachine = Machine({\n  id: 'todos',\n  initial: 'loading',\n  context: {\n    list: [],\n    selected: [],\n    error: {},\n  },\n  states: {\n    loading: {\n      invoke: {\n        src: fetchTodos,\n        onDone: {\n          target: 'success',\n          actions: assign({\n            list: (context, event) => event.data,\n          }),\n        },\n        onError: {\n          target: 'failure',\n          actions: assign({\n            error: (context, event) => event.data,\n          }),\n        },\n      },\n    },\n    success: {\n      on: {\n        COMPLETE_TODO: {\n          actions: assign({\n            selected: (context, event) => {\n              const { selected } = context;\n\n              if (selected.includes(event.id)) {\n                return selected.filter((item) => item !== event.id);\n              }\n              return [...selected, event.id];\n            },\n          }),\n        },\n        ADD_TODO: {\n          actions: assign({\n            list: (context, event) => [\n              ...context.list,\n              { id: nanoid(), title: event.title },\n            ],\n          }),\n        },\n        REMOVE_TODO: {\n          actions: assign({\n            list: (context, event) =>\n              context.list.filter((item) => item.id !== event.id),\n            selected: (context, event) =>\n              context.selected.filter((item) => item !== event.id),\n          }),\n        },\n        FILTER_TODOS: {\n          target: 'loading',\n          actions: send((context, event) => ({\n            type: 'FETCH_TODOS',\n            str: event.str,\n          })),\n        },\n        RESET_FILTERS: {\n          target: 'loading',\n          actions: send('FETCH_TODOS'),\n        },\n      },\n    },\n    failure: {\n      on: {\n        RETRY: { target: 'loading', actions: send('FETCH_TODOS') },\n      },\n    },\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { useMachine } from '@xstate/react';\nimport classNames from 'classnames';\nimport { todoMachine } from '../state/todoMachine';\nimport './Body.css';\n\nexport function Body() {\n  const [filterValue, setFilterValue] = useState('');\n  const [addValue, setAddValue] = useState('');\n  const [todos, send] = useMachine(todoMachine, { devTools: true });\n  const { list, selected, error } = todos.context;\n\n  useEffect(() => {\n    send('FETCH_TODOS');\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"body\">\n        <div className=\"body__status\">{todos.value}</div>\n\n        <h1 className=\"body__title\">todo list</h1>\n\n        <div className=\"body__content-wrapper\">\n          {todos.matches('loading') && (\n            <div className=\"spinner-border\" role=\"status\" />\n          )}\n\n          {todos.matches('success') && (\n            <>\n              <div className=\"mb-3 d-flex align-items-end\">\n                <div>\n                  <label htmlFor=\"filter\" className=\"form-label\">\n                    Filter\n                  </label>\n                  <input\n                    id=\"filter\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"todo title\"\n                    value={filterValue}\n                    onChange={({ target: { value } }) => setFilterValue(value)}\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary ml-3 btn-sm\"\n                  onClick={() => send('FILTER_TODOS', { str: filterValue })}\n                >\n                  Filter\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary btn-sm ml-2\"\n                  onClick={() => send('RESET_FILTERS')}\n                >\n                  reset\n                </button>\n              </div>\n\n              <div className=\"mb-3 d-flex align-items-end\">\n                <div>\n                  <label htmlFor=\"addTodo\" className=\"form-label\">\n                    New todo\n                  </label>\n                  <input\n                    id=\"addTodo\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"todo title\"\n                    value={addValue}\n                    onChange={({ target: { value } }) => setAddValue(value)}\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary ml-3 btn-sm\"\n                  onClick={() => send('ADD_TODO', { title: addValue })}\n                >\n                  Save\n                </button>\n              </div>\n\n              <ul className=\"body__list list-group\">\n                {list.length === 0 ? (\n                  <span style={{ color: '#fff' }}>Нет данных..</span>\n                ) : (\n                  list.map(({ id, title }) => {\n                    const isChecked = selected.includes(id);\n\n                    return (\n                      <li\n                        key={id}\n                        className={classNames('list-group-item', {\n                          'list-group-item-success': isChecked,\n                        })}\n                      >\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            id={`todo–${id}`}\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={() => send('COMPLETE_TODO', { id })}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor={`todo–${id}`}\n                          >\n                            {title}\n                          </label>\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-danger btn-sm\"\n                          onClick={() => send('REMOVE_TODO', { id })}\n                        >\n                          delete\n                        </button>\n                      </li>\n                    );\n                  })\n                )}\n              </ul>\n            </>\n          )}\n\n          {todos.matches('failure') && (\n            <div>\n              <p className=\"alert alert-danger\" role=\"alert\">\n                {error}\n              </p>\n\n              <button\n                className=\"btn btn-light\"\n                style={{ display: 'block', margin: '0 auto' }}\n                type=\"button\"\n                onClick={() => send('RETRY')}\n              >\n                Retry\n              </button>\n            </div>\n          )}\n        </div>\n      </section>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Body } from './Body';\nimport logo from '../logo.svg';\nimport './App.css';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"logo-wrapper\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </div>\n\n      <Body />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { inspect } from '@xstate/inspect';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { App } from './components';\nimport './index.css';\n\ninspect({ iframe: false });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}